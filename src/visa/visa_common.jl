# Automatically generated using Clang.jl
# all Ptr replaced with Ref, with a few marked exceptions

const VI_SPEC_VERSION = UInt32(0x00500800)
const VI_ATTR_RSRC_CLASS = UInt32(0xbfff0001)
const VI_ATTR_RSRC_NAME = UInt32(0xbfff0002)
const VI_ATTR_RSRC_IMPL_VERSION = UInt32(0x3fff0003)
const VI_ATTR_RSRC_LOCK_STATE = UInt32(0x3fff0004)
const VI_ATTR_MAX_QUEUE_LENGTH = UInt32(0x3fff0005)
const VI_ATTR_USER_DATA_32 = UInt32(0x3fff0007)
const VI_ATTR_FDC_CHNL = UInt32(0x3fff000d)
const VI_ATTR_FDC_MODE = UInt32(0x3fff000f)
const VI_ATTR_FDC_GEN_SIGNAL_EN = UInt32(0x3fff0011)
const VI_ATTR_FDC_USE_PAIR = UInt32(0x3fff0013)
const VI_ATTR_SEND_END_EN = UInt32(0x3fff0016)
const VI_ATTR_TERMCHAR = UInt32(0x3fff0018)
const VI_ATTR_TMO_VALUE = UInt32(0x3fff001a)
const VI_ATTR_GPIB_READDR_EN = UInt32(0x3fff001b)
const VI_ATTR_IO_PROT = UInt32(0x3fff001c)
const VI_ATTR_DMA_ALLOW_EN = UInt32(0x3fff001e)
const VI_ATTR_ASRL_BAUD = UInt32(0x3fff0021)
const VI_ATTR_ASRL_DATA_BITS = UInt32(0x3fff0022)
const VI_ATTR_ASRL_PARITY = UInt32(0x3fff0023)
const VI_ATTR_ASRL_STOP_BITS = UInt32(0x3fff0024)
const VI_ATTR_ASRL_FLOW_CNTRL = UInt32(0x3fff0025)
const VI_ATTR_RD_BUF_OPER_MODE = UInt32(0x3fff002a)
const VI_ATTR_RD_BUF_SIZE = UInt32(0x3fff002b)
const VI_ATTR_WR_BUF_OPER_MODE = UInt32(0x3fff002d)
const VI_ATTR_WR_BUF_SIZE = UInt32(0x3fff002e)
const VI_ATTR_SUPPRESS_END_EN = UInt32(0x3fff0036)
const VI_ATTR_TERMCHAR_EN = UInt32(0x3fff0038)
const VI_ATTR_DEST_ACCESS_PRIV = UInt32(0x3fff0039)
const VI_ATTR_DEST_BYTE_ORDER = UInt32(0x3fff003a)
const VI_ATTR_SRC_ACCESS_PRIV = UInt32(0x3fff003c)
const VI_ATTR_SRC_BYTE_ORDER = UInt32(0x3fff003d)
const VI_ATTR_SRC_INCREMENT = UInt32(0x3fff0040)
const VI_ATTR_DEST_INCREMENT = UInt32(0x3fff0041)
const VI_ATTR_WIN_ACCESS_PRIV = UInt32(0x3fff0045)
const VI_ATTR_WIN_BYTE_ORDER = UInt32(0x3fff0047)
const VI_ATTR_GPIB_ATN_STATE = UInt32(0x3fff0057)
const VI_ATTR_GPIB_ADDR_STATE = UInt32(0x3fff005c)
const VI_ATTR_GPIB_CIC_STATE = UInt32(0x3fff005e)
const VI_ATTR_GPIB_NDAC_STATE = UInt32(0x3fff0062)
const VI_ATTR_GPIB_SRQ_STATE = UInt32(0x3fff0067)
const VI_ATTR_GPIB_SYS_CNTRL_STATE = UInt32(0x3fff0068)
const VI_ATTR_GPIB_HS488_CBL_LEN = UInt32(0x3fff0069)
const VI_ATTR_CMDR_LA = UInt32(0x3fff006b)
const VI_ATTR_VXI_DEV_CLASS = UInt32(0x3fff006c)
const VI_ATTR_MAINFRAME_LA = UInt32(0x3fff0070)
const VI_ATTR_MANF_NAME = UInt32(0xbfff0072)
const VI_ATTR_MODEL_NAME = UInt32(0xbfff0077)
const VI_ATTR_VXI_VME_INTR_STATUS = UInt32(0x3fff008b)
const VI_ATTR_VXI_TRIG_STATUS = UInt32(0x3fff008d)
const VI_ATTR_VXI_VME_SYSFAIL_STATE = UInt32(0x3fff0094)
const VI_ATTR_WIN_BASE_ADDR_32 = UInt32(0x3fff0098)
const VI_ATTR_WIN_SIZE_32 = UInt32(0x3fff009a)
const VI_ATTR_ASRL_AVAIL_NUM = UInt32(0x3fff00ac)
const VI_ATTR_MEM_BASE_32 = UInt32(0x3fff00ad)
const VI_ATTR_ASRL_CTS_STATE = UInt32(0x3fff00ae)
const VI_ATTR_ASRL_DCD_STATE = UInt32(0x3fff00af)
const VI_ATTR_ASRL_DSR_STATE = UInt32(0x3fff00b1)
const VI_ATTR_ASRL_DTR_STATE = UInt32(0x3fff00b2)
const VI_ATTR_ASRL_END_IN = UInt32(0x3fff00b3)
const VI_ATTR_ASRL_END_OUT = UInt32(0x3fff00b4)
const VI_ATTR_ASRL_REPLACE_CHAR = UInt32(0x3fff00be)
const VI_ATTR_ASRL_RI_STATE = UInt32(0x3fff00bf)
const VI_ATTR_ASRL_RTS_STATE = UInt32(0x3fff00c0)
const VI_ATTR_ASRL_XON_CHAR = UInt32(0x3fff00c1)
const VI_ATTR_ASRL_XOFF_CHAR = UInt32(0x3fff00c2)
const VI_ATTR_WIN_ACCESS = UInt32(0x3fff00c3)
const VI_ATTR_RM_SESSION = UInt32(0x3fff00c4)
const VI_ATTR_VXI_LA = UInt32(0x3fff00d5)
const VI_ATTR_MANF_ID = UInt32(0x3fff00d9)
const VI_ATTR_MEM_SIZE_32 = UInt32(0x3fff00dd)
const VI_ATTR_MEM_SPACE = UInt32(0x3fff00de)
const VI_ATTR_MODEL_CODE = UInt32(0x3fff00df)
const VI_ATTR_SLOT = UInt32(0x3fff00e8)
const VI_ATTR_INTF_INST_NAME = UInt32(0xbfff00e9)
const VI_ATTR_IMMEDIATE_SERV = UInt32(0x3fff0100)
const VI_ATTR_INTF_PARENT_NUM = UInt32(0x3fff0101)
const VI_ATTR_RSRC_SPEC_VERSION = UInt32(0x3fff0170)
const VI_ATTR_INTF_TYPE = UInt32(0x3fff0171)
const VI_ATTR_GPIB_PRIMARY_ADDR = UInt32(0x3fff0172)
const VI_ATTR_GPIB_SECONDARY_ADDR = UInt32(0x3fff0173)
const VI_ATTR_RSRC_MANF_NAME = UInt32(0xbfff0174)
const VI_ATTR_RSRC_MANF_ID = UInt32(0x3fff0175)
const VI_ATTR_INTF_NUM = UInt32(0x3fff0176)
const VI_ATTR_TRIG_ID = UInt32(0x3fff0177)
const VI_ATTR_GPIB_REN_STATE = UInt32(0x3fff0181)
const VI_ATTR_GPIB_UNADDR_EN = UInt32(0x3fff0184)
const VI_ATTR_DEV_STATUS_BYTE = UInt32(0x3fff0189)
const VI_ATTR_FILE_APPEND_EN = UInt32(0x3fff0192)
const VI_ATTR_VXI_TRIG_SUPPORT = UInt32(0x3fff0194)
const VI_ATTR_TCPIP_ADDR = UInt32(0xbfff0195)
const VI_ATTR_TCPIP_HOSTNAME = UInt32(0xbfff0196)
const VI_ATTR_TCPIP_PORT = UInt32(0x3fff0197)
const VI_ATTR_TCPIP_DEVICE_NAME = UInt32(0xbfff0199)
const VI_ATTR_TCPIP_NODELAY = UInt32(0x3fff019a)
const VI_ATTR_TCPIP_KEEPALIVE = UInt32(0x3fff019b)
const VI_ATTR_4882_COMPLIANT = UInt32(0x3fff019f)
const VI_ATTR_USB_SERIAL_NUM = UInt32(0xbfff01a0)
const VI_ATTR_USB_INTFC_NUM = UInt32(0x3fff01a1)
const VI_ATTR_USB_PROTOCOL = UInt32(0x3fff01a7)
const VI_ATTR_USB_MAX_INTR_SIZE = UInt32(0x3fff01af)
const VI_ATTR_PXI_DEV_NUM = UInt32(0x3fff0201)
const VI_ATTR_PXI_FUNC_NUM = UInt32(0x3fff0202)
const VI_ATTR_PXI_BUS_NUM = UInt32(0x3fff0205)
const VI_ATTR_PXI_CHASSIS = UInt32(0x3fff0206)
const VI_ATTR_PXI_SLOTPATH = UInt32(0xbfff0207)
const VI_ATTR_PXI_SLOT_LBUS_LEFT = UInt32(0x3fff0208)
const VI_ATTR_PXI_SLOT_LBUS_RIGHT = UInt32(0x3fff0209)
const VI_ATTR_PXI_TRIG_BUS = UInt32(0x3fff020a)
const VI_ATTR_PXI_STAR_TRIG_BUS = UInt32(0x3fff020b)
const VI_ATTR_PXI_STAR_TRIG_LINE = UInt32(0x3fff020c)
const VI_ATTR_PXI_SRC_TRIG_BUS = UInt32(0x3fff020d)
const VI_ATTR_PXI_DEST_TRIG_BUS = UInt32(0x3fff020e)
const VI_ATTR_PXI_MEM_TYPE_BAR0 = UInt32(0x3fff0211)
const VI_ATTR_PXI_MEM_TYPE_BAR1 = UInt32(0x3fff0212)
const VI_ATTR_PXI_MEM_TYPE_BAR2 = UInt32(0x3fff0213)
const VI_ATTR_PXI_MEM_TYPE_BAR3 = UInt32(0x3fff0214)
const VI_ATTR_PXI_MEM_TYPE_BAR4 = UInt32(0x3fff0215)
const VI_ATTR_PXI_MEM_TYPE_BAR5 = UInt32(0x3fff0216)
const VI_ATTR_PXI_MEM_BASE_BAR0_32 = UInt32(0x3fff0221)
const VI_ATTR_PXI_MEM_BASE_BAR1_32 = UInt32(0x3fff0222)
const VI_ATTR_PXI_MEM_BASE_BAR2_32 = UInt32(0x3fff0223)
const VI_ATTR_PXI_MEM_BASE_BAR3_32 = UInt32(0x3fff0224)
const VI_ATTR_PXI_MEM_BASE_BAR4_32 = UInt32(0x3fff0225)
const VI_ATTR_PXI_MEM_BASE_BAR5_32 = UInt32(0x3fff0226)
const VI_ATTR_PXI_MEM_BASE_BAR0_64 = UInt32(0x3fff0228)
const VI_ATTR_PXI_MEM_BASE_BAR1_64 = UInt32(0x3fff0229)
const VI_ATTR_PXI_MEM_BASE_BAR2_64 = UInt32(0x3fff022a)
const VI_ATTR_PXI_MEM_BASE_BAR3_64 = UInt32(0x3fff022b)
const VI_ATTR_PXI_MEM_BASE_BAR4_64 = UInt32(0x3fff022c)
const VI_ATTR_PXI_MEM_BASE_BAR5_64 = UInt32(0x3fff022d)
const VI_ATTR_PXI_MEM_SIZE_BAR0_32 = UInt32(0x3fff0231)
const VI_ATTR_PXI_MEM_SIZE_BAR1_32 = UInt32(0x3fff0232)
const VI_ATTR_PXI_MEM_SIZE_BAR2_32 = UInt32(0x3fff0233)
const VI_ATTR_PXI_MEM_SIZE_BAR3_32 = UInt32(0x3fff0234)
const VI_ATTR_PXI_MEM_SIZE_BAR4_32 = UInt32(0x3fff0235)
const VI_ATTR_PXI_MEM_SIZE_BAR5_32 = UInt32(0x3fff0236)
const VI_ATTR_PXI_MEM_SIZE_BAR0_64 = UInt32(0x3fff0238)
const VI_ATTR_PXI_MEM_SIZE_BAR1_64 = UInt32(0x3fff0239)
const VI_ATTR_PXI_MEM_SIZE_BAR2_64 = UInt32(0x3fff023a)
const VI_ATTR_PXI_MEM_SIZE_BAR3_64 = UInt32(0x3fff023b)
const VI_ATTR_PXI_MEM_SIZE_BAR4_64 = UInt32(0x3fff023c)
const VI_ATTR_PXI_MEM_SIZE_BAR5_64 = UInt32(0x3fff023d)
const VI_ATTR_PXI_IS_EXPRESS = UInt32(0x3fff0240)
const VI_ATTR_PXI_SLOT_LWIDTH = UInt32(0x3fff0241)
const VI_ATTR_PXI_MAX_LWIDTH = UInt32(0x3fff0242)
const VI_ATTR_PXI_ACTUAL_LWIDTH = UInt32(0x3fff0243)
const VI_ATTR_PXI_DSTAR_BUS = UInt32(0x3fff0244)
const VI_ATTR_PXI_DSTAR_SET = UInt32(0x3fff0245)
const VI_ATTR_PXI_ALLOW_WRITE_COMBINE = UInt32(0x3fff0246)
const VI_ATTR_TCPIP_HISLIP_OVERLAP_EN = UInt32(0x3fff0300)
const VI_ATTR_TCPIP_HISLIP_VERSION = UInt32(0x3fff0301)
const VI_ATTR_TCPIP_HISLIP_MAX_MESSAGE_KB = UInt32(0x3fff0302)
const VI_ATTR_TCPIP_IS_HISLIP = UInt32(0x3fff0303)
const VI_ATTR_JOB_ID = UInt32(0x3fff4006)
const VI_ATTR_EVENT_TYPE = UInt32(0x3fff4010)
const VI_ATTR_SIGP_STATUS_ID = UInt32(0x3fff4011)
const VI_ATTR_RECV_TRIG_ID = UInt32(0x3fff4012)
const VI_ATTR_INTR_STATUS_ID = UInt32(0x3fff4023)
const VI_ATTR_STATUS = UInt32(0x3fff4025)
const VI_ATTR_RET_COUNT_32 = UInt32(0x3fff4026)
const VI_ATTR_BUFFER = UInt32(0x3fff4027)
const VI_ATTR_RECV_INTR_LEVEL = UInt32(0x3fff4041)
const VI_ATTR_OPER_NAME = UInt32(0xbfff4042)
const VI_ATTR_GPIB_RECV_CIC_STATE = UInt32(0x3fff4193)
const VI_ATTR_RECV_TCPIP_ADDR = UInt32(0xbfff4198)
const VI_ATTR_USB_RECV_INTR_SIZE = UInt32(0x3fff41b0)
const VI_ATTR_USB_RECV_INTR_DATA = UInt32(0xbfff41b1)
const VI_ATTR_PXI_RECV_INTR_SEQ = UInt32(0x3fff4240)
const VI_ATTR_PXI_RECV_INTR_DATA = UInt32(0x3fff4241)
const VI_ATTR_USER_DATA_64 = UInt32(0x3fff000a)
const VI_ATTR_RET_COUNT_64 = UInt32(0x3fff4028)
const VI_ATTR_USER_DATA = VI_ATTR_USER_DATA_64
const VI_ATTR_RET_COUNT = VI_ATTR_RET_COUNT_64
const VI_ATTR_WIN_BASE_ADDR_64 = UInt32(0x3fff009b)
const VI_ATTR_WIN_SIZE_64 = UInt32(0x3fff009c)
const VI_ATTR_MEM_BASE_64 = UInt32(0x3fff00d0)
const VI_ATTR_MEM_SIZE_64 = UInt32(0x3fff00d1)
const VI_ATTR_WIN_BASE_ADDR = VI_ATTR_WIN_BASE_ADDR_64
const VI_ATTR_WIN_SIZE = VI_ATTR_WIN_SIZE_64
const VI_ATTR_MEM_BASE = VI_ATTR_MEM_BASE_64
const VI_ATTR_MEM_SIZE = VI_ATTR_MEM_SIZE_64
const VI_ATTR_PXI_MEM_BASE_BAR0 = VI_ATTR_PXI_MEM_BASE_BAR0_64
const VI_ATTR_PXI_MEM_BASE_BAR1 = VI_ATTR_PXI_MEM_BASE_BAR1_64
const VI_ATTR_PXI_MEM_BASE_BAR2 = VI_ATTR_PXI_MEM_BASE_BAR2_64
const VI_ATTR_PXI_MEM_BASE_BAR3 = VI_ATTR_PXI_MEM_BASE_BAR3_64
const VI_ATTR_PXI_MEM_BASE_BAR4 = VI_ATTR_PXI_MEM_BASE_BAR4_64
const VI_ATTR_PXI_MEM_BASE_BAR5 = VI_ATTR_PXI_MEM_BASE_BAR5_64
const VI_ATTR_PXI_MEM_SIZE_BAR0 = VI_ATTR_PXI_MEM_SIZE_BAR0_64
const VI_ATTR_PXI_MEM_SIZE_BAR1 = VI_ATTR_PXI_MEM_SIZE_BAR1_64
const VI_ATTR_PXI_MEM_SIZE_BAR2 = VI_ATTR_PXI_MEM_SIZE_BAR2_64
const VI_ATTR_PXI_MEM_SIZE_BAR3 = VI_ATTR_PXI_MEM_SIZE_BAR3_64
const VI_ATTR_PXI_MEM_SIZE_BAR4 = VI_ATTR_PXI_MEM_SIZE_BAR4_64
const VI_ATTR_PXI_MEM_SIZE_BAR5 = VI_ATTR_PXI_MEM_SIZE_BAR5_64
const VI_EVENT_IO_COMPLETION = UInt32(0x3fff2009)
const VI_EVENT_TRIG = UInt32(0xbfff200a)
const VI_EVENT_SERVICE_REQ = UInt32(0x3fff200b)
const VI_EVENT_CLEAR = UInt32(0x3fff200d)
const VI_EVENT_EXCEPTION = UInt32(0xbfff200e)
const VI_EVENT_GPIB_CIC = UInt32(0x3fff2012)
const VI_EVENT_GPIB_TALK = UInt32(0x3fff2013)
const VI_EVENT_GPIB_LISTEN = UInt32(0x3fff2014)
const VI_EVENT_VXI_VME_SYSFAIL = UInt32(0x3fff201d)
const VI_EVENT_VXI_VME_SYSRESET = UInt32(0x3fff201e)
const VI_EVENT_VXI_SIGP = UInt32(0x3fff2020)
const VI_EVENT_VXI_VME_INTR = UInt32(0xbfff2021)
const VI_EVENT_PXI_INTR = UInt32(0x3fff2022)
const VI_EVENT_TCPIP_CONNECT = UInt32(0x3fff2036)
const VI_EVENT_USB_INTR = UInt32(0x3fff2037)
const VI_ALL_ENABLED_EVENTS = UInt32(0x3fff7fff)
const VI_SUCCESS_EVENT_EN = Int32(0x3fff0002)
const VI_SUCCESS_EVENT_DIS = Int32(0x3fff0003)
const VI_SUCCESS_QUEUE_EMPTY = Int32(0x3fff0004)
const VI_SUCCESS_TERM_CHAR = Int32(0x3fff0005)
const VI_SUCCESS_MAX_CNT = Int32(0x3fff0006)
const VI_SUCCESS_DEV_NPRESENT = Int32(0x3fff007d)
const VI_SUCCESS_TRIG_MAPPED = Int32(0x3fff007e)
const VI_SUCCESS_QUEUE_NEMPTY = Int32(0x3fff0080)
const VI_SUCCESS_NCHAIN = Int32(0x3fff0098)
const VI_SUCCESS_NESTED_SHARED = Int32(0x3fff0099)
const VI_SUCCESS_NESTED_EXCLUSIVE = Int32(0x3fff009a)
const VI_SUCCESS_SYNC = Int32(0x3fff009b)
const VI_WARN_QUEUE_OVERFLOW = Int32(0x3fff000c)
const VI_WARN_CONFIG_NLOADED = Int32(0x3fff0077)
const VI_WARN_NULL_OBJECT = Int32(0x3fff0082)
const VI_WARN_NSUP_ATTR_STATE = Int32(0x3fff0084)
const VI_WARN_UNKNOWN_STATUS = Int32(0x3fff0085)
const VI_WARN_NSUP_BUF = Int32(0x3fff0088)
const VI_WARN_EXT_FUNC_NIMPL = Int32(0x3fff00a9)
const VI_ERROR = -(Int32(2147483647)) - 1
const VI_ERROR_SYSTEM_ERROR = VI_ERROR + Int32(0x3fff0000)
const VI_ERROR_INV_OBJECT = VI_ERROR + Int32(0x3fff000e)
const VI_ERROR_RSRC_LOCKED = VI_ERROR + Int32(0x3fff000f)
const VI_ERROR_INV_EXPR = VI_ERROR + Int32(0x3fff0010)
const VI_ERROR_RSRC_NFOUND = VI_ERROR + Int32(0x3fff0011)
const VI_ERROR_INV_RSRC_NAME = VI_ERROR + Int32(0x3fff0012)
const VI_ERROR_INV_ACC_MODE = VI_ERROR + Int32(0x3fff0013)
const VI_ERROR_TMO = VI_ERROR + Int32(0x3fff0015)
const VI_ERROR_CLOSING_FAILED = VI_ERROR + Int32(0x3fff0016)
const VI_ERROR_INV_DEGREE = VI_ERROR + Int32(0x3fff001b)
const VI_ERROR_INV_JOB_ID = VI_ERROR + Int32(0x3fff001c)
const VI_ERROR_NSUP_ATTR = VI_ERROR + Int32(0x3fff001d)
const VI_ERROR_NSUP_ATTR_STATE = VI_ERROR + Int32(0x3fff001e)
const VI_ERROR_ATTR_READONLY = VI_ERROR + Int32(0x3fff001f)
const VI_ERROR_INV_LOCK_TYPE = VI_ERROR + Int32(0x3fff0020)
const VI_ERROR_INV_ACCESS_KEY = VI_ERROR + Int32(0x3fff0021)
const VI_ERROR_INV_EVENT = VI_ERROR + Int32(0x3fff0026)
const VI_ERROR_INV_MECH = VI_ERROR + Int32(0x3fff0027)
const VI_ERROR_HNDLR_NINSTALLED = VI_ERROR + Int32(0x3fff0028)
const VI_ERROR_INV_HNDLR_REF = VI_ERROR + Int32(0x3fff0029)
const VI_ERROR_INV_CONTEXT = VI_ERROR + Int32(0x3fff002a)
const VI_ERROR_QUEUE_OVERFLOW = VI_ERROR + Int32(0x3fff002d)
const VI_ERROR_NENABLED = VI_ERROR + Int32(0x3fff002f)
const VI_ERROR_ABORT = VI_ERROR + Int32(0x3fff0030)
const VI_ERROR_RAW_WR_PROT_VIOL = VI_ERROR + Int32(0x3fff0034)
const VI_ERROR_RAW_RD_PROT_VIOL = VI_ERROR + Int32(0x3fff0035)
const VI_ERROR_OUTP_PROT_VIOL = VI_ERROR + Int32(0x3fff0036)
const VI_ERROR_INP_PROT_VIOL = VI_ERROR + Int32(0x3fff0037)
const VI_ERROR_BERR = VI_ERROR + Int32(0x3fff0038)
const VI_ERROR_IN_PROGRESS = VI_ERROR + Int32(0x3fff0039)
const VI_ERROR_INV_SETUP = VI_ERROR + Int32(0x3fff003a)
const VI_ERROR_QUEUE_ERROR = VI_ERROR + Int32(0x3fff003b)
const VI_ERROR_ALLOC = VI_ERROR + Int32(0x3fff003c)
const VI_ERROR_INV_MASK = VI_ERROR + Int32(0x3fff003d)
const VI_ERROR_IO = VI_ERROR + Int32(0x3fff003e)
const VI_ERROR_INV_FMT = VI_ERROR + Int32(0x3fff003f)
const VI_ERROR_NSUP_FMT = VI_ERROR + Int32(0x3fff0041)
const VI_ERROR_LINE_IN_USE = VI_ERROR + Int32(0x3fff0042)
const VI_ERROR_LINE_NRESERVED = VI_ERROR + Int32(0x3fff0043)
const VI_ERROR_NSUP_MODE = VI_ERROR + Int32(0x3fff0046)
const VI_ERROR_SRQ_NOCCURRED = VI_ERROR + Int32(0x3fff004a)
const VI_ERROR_INV_SPACE = VI_ERROR + Int32(0x3fff004e)
const VI_ERROR_INV_OFFSET = VI_ERROR + Int32(0x3fff0051)
const VI_ERROR_INV_WIDTH = VI_ERROR + Int32(0x3fff0052)
const VI_ERROR_NSUP_OFFSET = VI_ERROR + Int32(0x3fff0054)
const VI_ERROR_NSUP_VAR_WIDTH = VI_ERROR + Int32(0x3fff0055)
const VI_ERROR_WINDOW_NMAPPED = VI_ERROR + Int32(0x3fff0057)
const VI_ERROR_RESP_PENDING = VI_ERROR + Int32(0x3fff0059)
const VI_ERROR_NLISTENERS = VI_ERROR + Int32(0x3fff005f)
const VI_ERROR_NCIC = VI_ERROR + Int32(0x3fff0060)
const VI_ERROR_NSYS_CNTLR = VI_ERROR + Int32(0x3fff0061)
const VI_ERROR_NSUP_OPER = VI_ERROR + Int32(0x3fff0067)
const VI_ERROR_INTR_PENDING = VI_ERROR + Int32(0x3fff0068)
const VI_ERROR_ASRL_PARITY = VI_ERROR + Int32(0x3fff006a)
const VI_ERROR_ASRL_FRAMING = VI_ERROR + Int32(0x3fff006b)
const VI_ERROR_ASRL_OVERRUN = VI_ERROR + Int32(0x3fff006c)
const VI_ERROR_TRIG_NMAPPED = VI_ERROR + Int32(0x3fff006e)
const VI_ERROR_NSUP_ALIGN_OFFSET = VI_ERROR + Int32(0x3fff0070)
const VI_ERROR_USER_BUF = VI_ERROR + Int32(0x3fff0071)
const VI_ERROR_RSRC_BUSY = VI_ERROR + Int32(0x3fff0072)
const VI_ERROR_NSUP_WIDTH = VI_ERROR + Int32(0x3fff0076)
const VI_ERROR_INV_PARAMETER = VI_ERROR + Int32(0x3fff0078)
const VI_ERROR_INV_PROT = VI_ERROR + Int32(0x3fff0079)
const VI_ERROR_INV_SIZE = VI_ERROR + Int32(0x3fff007b)
const VI_ERROR_WINDOW_MAPPED = VI_ERROR + Int32(0x3fff0080)
const VI_ERROR_NIMPL_OPER = VI_ERROR + Int32(0x3fff0081)
const VI_ERROR_INV_LENGTH = VI_ERROR + Int32(0x3fff0083)
const VI_ERROR_INV_MODE = VI_ERROR + Int32(0x3fff0091)
const VI_ERROR_SESN_NLOCKED = VI_ERROR + Int32(0x3fff009c)
const VI_ERROR_MEM_NSHARED = VI_ERROR + Int32(0x3fff009d)
const VI_ERROR_LIBRARY_NFOUND = VI_ERROR + Int32(0x3fff009e)
const VI_ERROR_NSUP_INTR = VI_ERROR + Int32(0x3fff009f)
const VI_ERROR_INV_LINE = VI_ERROR + Int32(0x3fff00a0)
const VI_ERROR_FILE_ACCESS = VI_ERROR + Int32(0x3fff00a1)
const VI_ERROR_FILE_IO = VI_ERROR + Int32(0x3fff00a2)
const VI_ERROR_NSUP_LINE = VI_ERROR + Int32(0x3fff00a3)
const VI_ERROR_NSUP_MECH = VI_ERROR + Int32(0x3fff00a4)
const VI_ERROR_INTF_NUM_NCONFIG = VI_ERROR + Int32(0x3fff00a5)
const VI_ERROR_CONN_LOST = VI_ERROR + Int32(0x3fff00a6)
const VI_ERROR_MACHINE_NAVAIL = VI_ERROR + Int32(0x3fff00a7)
const VI_ERROR_NPERMISSION = VI_ERROR + Int32(0x3fff00a8)

# Skipping MacroDefinition: VI_VERSION_MAJOR ( ver ) ( ( ( ( ViVersion ) ver ) & 0xFFF00000UL ) >> 20 )
# Skipping MacroDefinition: VI_VERSION_MINOR ( ver ) ( ( ( ( ViVersion ) ver ) & 0x000FFF00UL ) >> 8 )
# Skipping MacroDefinition: VI_VERSION_SUBMINOR ( ver ) ( ( ( ( ViVersion ) ver ) & 0x000000FFUL ) )

const VI_FIND_BUFLEN = 256
const VI_INTF_GPIB = 1
const VI_INTF_VXI = 2
const VI_INTF_GPIB_VXI = 3
const VI_INTF_ASRL = 4
const VI_INTF_PXI = 5
const VI_INTF_TCPIP = 6
const VI_INTF_USB = 7
const VI_PROT_NORMAL = 1
const VI_PROT_FDC = 2
const VI_PROT_HS488 = 3
const VI_PROT_4882_STRS = 4
const VI_PROT_USBTMC_VENDOR = 5
const VI_FDC_NORMAL = 1
const VI_FDC_STREAM = 2
const VI_LOCAL_SPACE = 0
const VI_A16_SPACE = 1
const VI_A24_SPACE = 2
const VI_A32_SPACE = 3
const VI_A64_SPACE = 4
const VI_PXI_ALLOC_SPACE = 9
const VI_PXI_CFG_SPACE = 10
const VI_PXI_BAR0_SPACE = 11
const VI_PXI_BAR1_SPACE = 12
const VI_PXI_BAR2_SPACE = 13
const VI_PXI_BAR3_SPACE = 14
const VI_PXI_BAR4_SPACE = 15
const VI_PXI_BAR5_SPACE = 16
const VI_OPAQUE_SPACE = Float32(0x0fff)
const VI_UNKNOWN_LA = -1
const VI_UNKNOWN_SLOT = -1
const VI_UNKNOWN_LEVEL = -1
const VI_UNKNOWN_CHASSIS = -1
const VI_QUEUE = 1
const VI_HNDLR = 2
const VI_SUSPEND_HNDLR = 4
const VI_ALL_MECH = Float32(0x0fff)
const VI_ANY_HNDLR = 0
const VI_TRIG_ALL = -2
const VI_TRIG_SW = -1
const VI_TRIG_TTL0 = 0
const VI_TRIG_TTL1 = 1
const VI_TRIG_TTL2 = 2
const VI_TRIG_TTL3 = 3
const VI_TRIG_TTL4 = 4
const VI_TRIG_TTL5 = 5
const VI_TRIG_TTL6 = 6
const VI_TRIG_TTL7 = 7
const VI_TRIG_ECL0 = 8
const VI_TRIG_ECL1 = 9
const VI_TRIG_ECL2 = 10
const VI_TRIG_ECL3 = 11
const VI_TRIG_ECL4 = 12
const VI_TRIG_ECL5 = 13
const VI_TRIG_STAR_SLOT1 = 14
const VI_TRIG_STAR_SLOT2 = 15
const VI_TRIG_STAR_SLOT3 = 16
const VI_TRIG_STAR_SLOT4 = 17
const VI_TRIG_STAR_SLOT5 = 18
const VI_TRIG_STAR_SLOT6 = 19
const VI_TRIG_STAR_SLOT7 = 20
const VI_TRIG_STAR_SLOT8 = 21
const VI_TRIG_STAR_SLOT9 = 22
const VI_TRIG_STAR_SLOT10 = 23
const VI_TRIG_STAR_SLOT11 = 24
const VI_TRIG_STAR_SLOT12 = 25
const VI_TRIG_STAR_INSTR = 26
const VI_TRIG_PANEL_IN = 27
const VI_TRIG_PANEL_OUT = 28
const VI_TRIG_STAR_VXI0 = 29
const VI_TRIG_STAR_VXI1 = 30
const VI_TRIG_STAR_VXI2 = 31
const VI_TRIG_TTL8 = 32
const VI_TRIG_TTL9 = 33
const VI_TRIG_TTL10 = 34
const VI_TRIG_TTL11 = 35
const VI_TRIG_PROT_DEFAULT = 0
const VI_TRIG_PROT_ON = 1
const VI_TRIG_PROT_OFF = 2
const VI_TRIG_PROT_SYNC = 5
const VI_TRIG_PROT_RESERVE = 6
const VI_TRIG_PROT_UNRESERVE = 7
const VI_READ_BUF = 1
const VI_WRITE_BUF = 2
const VI_READ_BUF_DISCARD = 4
const VI_WRITE_BUF_DISCARD = 8
const VI_IO_IN_BUF = 16
const VI_IO_OUT_BUF = 32
const VI_IO_IN_BUF_DISCARD = 64
const VI_IO_OUT_BUF_DISCARD = 128
const VI_FLUSH_ON_ACCESS = 1
const VI_FLUSH_WHEN_FULL = 2
const VI_FLUSH_DISABLE = 3
const VI_NMAPPED = 1
const VI_USE_OPERS = 2
const VI_DEREF_ADDR = 3
const VI_DEREF_ADDR_BYTE_SWAP = 4
const VI_TMO_IMMEDIATE = Int32(0)
const VI_TMO_INFINITE = UInt32(0xffffffff)
const VI_NO_LOCK = 0
const VI_EXCLUSIVE_LOCK = 1
const VI_SHARED_LOCK = 2
const VI_LOAD_CONFIG = 4
const VI_NO_SEC_ADDR = Float32(0x0fff)
const VI_ASRL_PAR_NONE = 0
const VI_ASRL_PAR_ODD = 1
const VI_ASRL_PAR_EVEN = 2
const VI_ASRL_PAR_MARK = 3
const VI_ASRL_PAR_SPACE = 4
const VI_ASRL_STOP_ONE = 10
const VI_ASRL_STOP_ONE5 = 15
const VI_ASRL_STOP_TWO = 20
const VI_ASRL_FLOW_NONE = 0
const VI_ASRL_FLOW_XON_XOFF = 1
const VI_ASRL_FLOW_RTS_CTS = 2
const VI_ASRL_FLOW_DTR_DSR = 4
const VI_ASRL_END_NONE = 0
const VI_ASRL_END_LAST_BIT = 1
const VI_ASRL_END_TERMCHAR = 2
const VI_ASRL_END_BREAK = 3
const VI_STATE_ASSERTED = 1
const VI_STATE_UNASSERTED = 0
const VI_STATE_UNKNOWN = -1
const VI_BIG_ENDIAN = 0
const VI_LITTLE_ENDIAN = 1
const VI_DATA_PRIV = 0
const VI_DATA_NPRIV = 1
const VI_PROG_PRIV = 2
const VI_PROG_NPRIV = 3
const VI_BLCK_PRIV = 4
const VI_BLCK_NPRIV = 5
const VI_D64_PRIV = 6
const VI_D64_NPRIV = 7
const VI_D64_2EVME = 8
const VI_D64_SST160 = 9
const VI_D64_SST267 = 10
const VI_D64_SST320 = 11
const VI_WIDTH_8 = 1
const VI_WIDTH_16 = 2
const VI_WIDTH_32 = 4
const VI_WIDTH_64 = 8
const VI_GPIB_REN_DEASSERT = 0
const VI_GPIB_REN_ASSERT = 1
const VI_GPIB_REN_DEASSERT_GTL = 2
const VI_GPIB_REN_ASSERT_ADDRESS = 3
const VI_GPIB_REN_ASSERT_LLO = 4
const VI_GPIB_REN_ASSERT_ADDRESS_LLO = 5
const VI_GPIB_REN_ADDRESS_GTL = 6
const VI_GPIB_ATN_DEASSERT = 0
const VI_GPIB_ATN_ASSERT = 1
const VI_GPIB_ATN_DEASSERT_HANDSHAKE = 2
const VI_GPIB_ATN_ASSERT_IMMEDIATE = 3
const VI_GPIB_HS488_DISABLED = 0
const VI_GPIB_HS488_NIMPL = -1
const VI_GPIB_UNADDRESSED = 0
const VI_GPIB_TALKER = 1
const VI_GPIB_LISTENER = 2
const VI_VXI_CMD16 = 0x0200
const VI_VXI_CMD16_RESP16 = 0x0202
const VI_VXI_RESP16 = 0x0002
const VI_VXI_CMD32 = 0x0400
const VI_VXI_CMD32_RESP16 = 0x0402
const VI_VXI_CMD32_RESP32 = 0x0404
const VI_VXI_RESP32 = 0x0004
const VI_ASSERT_SIGNAL = -1
const VI_ASSERT_USE_ASSIGNED = 0
const VI_ASSERT_IRQ1 = 1
const VI_ASSERT_IRQ2 = 2
const VI_ASSERT_IRQ3 = 3
const VI_ASSERT_IRQ4 = 4
const VI_ASSERT_IRQ5 = 5
const VI_ASSERT_IRQ6 = 6
const VI_ASSERT_IRQ7 = 7
const VI_UTIL_ASSERT_SYSRESET = 1
const VI_UTIL_ASSERT_SYSFAIL = 2
const VI_UTIL_DEASSERT_SYSFAIL = 3
const VI_VXI_CLASS_MEMORY = 0
const VI_VXI_CLASS_EXTENDED = 1
const VI_VXI_CLASS_MESSAGE = 2
const VI_VXI_CLASS_REGISTER = 3
const VI_VXI_CLASS_OTHER = 4
const VI_PXI_ADDR_NONE = 0
const VI_PXI_ADDR_MEM = 1
const VI_PXI_ADDR_IO = 2
const VI_PXI_ADDR_CFG = 3
const VI_TRIG_UNKNOWN = -1
const VI_PXI_LBUS_UNKNOWN = -1
const VI_PXI_LBUS_NONE = 0
const VI_PXI_LBUS_STAR_TRIG_BUS_0 = 1000
const VI_PXI_LBUS_STAR_TRIG_BUS_1 = 1001
const VI_PXI_LBUS_STAR_TRIG_BUS_2 = 1002
const VI_PXI_LBUS_STAR_TRIG_BUS_3 = 1003
const VI_PXI_LBUS_STAR_TRIG_BUS_4 = 1004
const VI_PXI_LBUS_STAR_TRIG_BUS_5 = 1005
const VI_PXI_LBUS_STAR_TRIG_BUS_6 = 1006
const VI_PXI_LBUS_STAR_TRIG_BUS_7 = 1007
const VI_PXI_LBUS_STAR_TRIG_BUS_8 = 1008
const VI_PXI_LBUS_STAR_TRIG_BUS_9 = 1009
const VI_PXI_STAR_TRIG_CONTROLLER = 1413

# Skipping MacroDefinition: viGetDefaultRM ( vi ) viOpenDefaultRM ( vi )

const VI_ERROR_INV_SESSION = VI_ERROR_INV_OBJECT
const VI_INFINITE = VI_TMO_INFINITE
const VI_NORMAL = VI_PROT_NORMAL
const VI_FDC = VI_PROT_FDC
const VI_HS488 = VI_PROT_HS488
const VI_ASRL488 = VI_PROT_4882_STRS
const VI_ASRL_IN_BUF = VI_IO_IN_BUF
const VI_ASRL_OUT_BUF = VI_IO_OUT_BUF
const VI_ASRL_IN_BUF_DISCARD = VI_IO_IN_BUF_DISCARD
const VI_ASRL_OUT_BUF_DISCARD = VI_IO_OUT_BUF_DISCARD
const VI_ERROR_HW_NGENUINE = VI_ERROR + Int32(0x3fff00aa)
const VI_INTF_RIO = 8
const VI_INTF_FIREWIRE = 9
const VI_ATTR_SYNC_MXI_ALLOW_EN = UInt32(0x3fff0161)
const VI_EVENT_VXI_DEV_CMD = UInt32(0xbfff200f)
const VI_ATTR_VXI_DEV_CMD_TYPE = UInt32(0x3fff4037)
const VI_ATTR_VXI_DEV_CMD_VALUE = UInt32(0x3fff4038)
const VI_VXI_DEV_CMD_TYPE_16 = 16
const VI_VXI_DEV_CMD_TYPE_32 = 32
const VI_VXI_RESP_NONE = 0
const VI_VXI_RESP_PROT_ERROR = -1
const VI_ATTR_VXI_TRIG_LINES_EN = UInt32(0x3fff4043)
const VI_ATTR_VXI_TRIG_DIR = UInt32(0x3fff4044)
const VI_ATTR_ASRL_DISCARD_NULL = UInt32(0x3fff00b0)
const VI_ATTR_ASRL_CONNECTED = UInt32(0x3fff01bb)
const VI_ATTR_ASRL_BREAK_STATE = UInt32(0x3fff01bc)
const VI_ATTR_ASRL_BREAK_LEN = UInt32(0x3fff01bd)
const VI_ATTR_ASRL_ALLOW_TRANSMIT = UInt32(0x3fff01be)
const VI_ATTR_ASRL_WIRE_MODE = UInt32(0x3fff01bf)
const VI_ASRL_WIRE_485_4 = 0
const VI_ASRL_WIRE_485_2_DTR_ECHO = 1
const VI_ASRL_WIRE_485_2_DTR_CTRL = 2
const VI_ASRL_WIRE_485_2_AUTO = 3
const VI_ASRL_WIRE_232_DTE = 128
const VI_ASRL_WIRE_232_DCE = 129
const VI_ASRL_WIRE_232_AUTO = 130
const VI_EVENT_ASRL_BREAK = UInt32(0x3fff2023)
const VI_EVENT_ASRL_CTS = UInt32(0x3fff2029)
const VI_EVENT_ASRL_DSR = UInt32(0x3fff202a)
const VI_EVENT_ASRL_DCD = UInt32(0x3fff202c)
const VI_EVENT_ASRL_RI = UInt32(0x3fff202e)
const VI_EVENT_ASRL_CHAR = UInt32(0x3fff2035)
const VI_EVENT_ASRL_TERMCHAR = UInt32(0x3fff2024)
const VI_ATTR_FIREWIRE_DEST_UPPER_OFFSET = UInt32(0x3fff01f0)
const VI_ATTR_FIREWIRE_SRC_UPPER_OFFSET = UInt32(0x3fff01f1)
const VI_ATTR_FIREWIRE_WIN_UPPER_OFFSET = UInt32(0x3fff01f2)
const VI_ATTR_FIREWIRE_VENDOR_ID = UInt32(0x3fff01f3)
const VI_ATTR_FIREWIRE_LOWER_CHIP_ID = UInt32(0x3fff01f4)
const VI_ATTR_FIREWIRE_UPPER_CHIP_ID = UInt32(0x3fff01f5)
const VI_FIREWIRE_DFLT_SPACE = 5
const ViUInt32 = Culong
const ViObject = ViUInt32
const ViEvent = ViObject
const ViPEvent = Ref{ViEvent}
const ViFindList = ViObject
const ViPFindList = Ref{ViFindList}
const ViUInt64 = Culonglong
const ViBusAddress = ViUInt64
const ViBusSize = ViUInt64
const ViAttrState = ViUInt64
const ViBusAddress64 = ViUInt64
const ViPBusAddress64 = Ref{ViBusAddress64}
const ViEventType = ViUInt32
const ViPEventType = Ref{ViEventType}
const ViAEventType = Ref{ViEventType}
const ViPAttrState = Ref{Cvoid}
const ViAttr = ViUInt32
const ViPAttr = Ref{ViAttr}
const ViAAttr = Ref{ViAttr}
const ViChar = UInt8
const ViPChar = Ptr{ViChar} # kept as Ptr
const ViString = ViPChar
const ViKeyId = ViString
const ViConstString = Ptr{ViChar}  # kept as Ptr
const ViConstKeyId = ViConstString
const ViPString = ViPChar
const ViPKeyId = ViPString
const ViJobId = ViUInt32
const ViPJobId = Ref{ViJobId}
const ViAccessMode = ViUInt32
const ViPAccessMode = Ref{ViAccessMode}
const ViPBusAddress = Ref{ViBusAddress}
const ViEventFilter = ViUInt32
const ViVAList = Cint
const ViHndlr = Ref{Cvoid}
const VI_SUCCESS = Int32(0)
const VI_NULL = 0
const VI_TRUE = 1
const VI_FALSE = 0
const ViInt64 = Clonglong
const ViPUInt64 = Ref{ViUInt64}
const ViAUInt64 = Ref{ViUInt64}
const ViPInt64 = Ref{ViInt64}
const ViAInt64 = Ref{ViInt64}
const ViInt32 = Clong
const ViPUInt32 = Ref{ViUInt32}
const ViAUInt32 = Ref{ViUInt32}
const ViPInt32 = Ref{ViInt32}
const ViAInt32 = Ref{ViInt32}
const ViUInt16 = UInt16
const ViPUInt16 = Ref{ViUInt16}
const ViAUInt16 = Ref{ViUInt16}
const ViInt16 = Int16
const ViPInt16 = Ref{ViInt16}
const ViAInt16 = Ref{ViInt16}
const ViUInt8 = Cuchar
const ViPUInt8 = Ref{ViUInt8}
const ViAUInt8 = Ref{ViUInt8}
const ViInt8 = UInt8
const ViPInt8 = Ref{ViInt8}
const ViAInt8 = Ref{ViInt8}
const ViAChar = Ref{ViChar}
const ViByte = Cuchar
const ViPByte = Ref{ViByte}
const ViAByte = Ref{ViByte}
const ViAddr = Ref{Cvoid}
const ViPAddr = Ref{ViAddr}
const ViAAddr = Ref{ViAddr}
const ViReal32 = Cfloat
const ViPReal32 = Ref{ViReal32}
const ViAReal32 = Ref{ViReal32}
const ViReal64 = Cdouble
const ViPReal64 = Ref{ViReal64}
const ViAReal64 = Ref{ViReal64}
const ViBuf = ViPByte
const ViConstBuf = Ref{ViByte}
const ViPBuf = ViPByte
const ViABuf = Ref{ViPByte}
const ViAString = Ref{ViPChar}
const ViRsrc = ViString
const ViConstRsrc = ViConstString
const ViPRsrc = ViString
const ViARsrc = Ref{ViString}
const ViBoolean = ViUInt16
const ViPBoolean = Ref{ViBoolean}
const ViABoolean = Ref{ViBoolean}
const ViStatus = ViInt32
const ViPStatus = Ref{ViStatus}
const ViAStatus = Ref{ViStatus}
const ViVersion = ViUInt32
const ViPVersion = Ref{ViVersion}
const ViAVersion = Ref{ViVersion}
const ViPObject = Ref{ViObject}
const ViAObject = Ref{ViObject}
const ViSession = ViObject
const ViPSession = Ref{ViSession}
const ViASession = Ref{ViSession}
const VI_WARN_NSUP_ID_QUERY = Int32(0x3ffc0101)
const VI_WARN_NSUP_RESET = Int32(0x3ffc0102)
const VI_WARN_NSUP_SELF_TEST = Int32(0x3ffc0103)
const VI_WARN_NSUP_ERROR_QUERY = Int32(0x3ffc0104)
const VI_WARN_NSUP_REV_QUERY = Int32(0x3ffc0105)
const VI_ERROR_PARAMETER1 = VI_ERROR + Int32(0x3ffc0001)
const VI_ERROR_PARAMETER2 = VI_ERROR + Int32(0x3ffc0002)
const VI_ERROR_PARAMETER3 = VI_ERROR + Int32(0x3ffc0003)
const VI_ERROR_PARAMETER4 = VI_ERROR + Int32(0x3ffc0004)
const VI_ERROR_PARAMETER5 = VI_ERROR + Int32(0x3ffc0005)
const VI_ERROR_PARAMETER6 = VI_ERROR + Int32(0x3ffc0006)
const VI_ERROR_PARAMETER7 = VI_ERROR + Int32(0x3ffc0007)
const VI_ERROR_PARAMETER8 = VI_ERROR + Int32(0x3ffc0008)
const VI_ERROR_FAIL_ID_QUERY = VI_ERROR + Int32(0x3ffc0011)
const VI_ERROR_INV_RESPONSE = VI_ERROR + Int32(0x3ffc0012)
const VI_ON = 1
const VI_OFF = 0
